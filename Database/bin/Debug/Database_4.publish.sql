/*
Deployment script for BaiTapBootStrap

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BaiTapBootStrap"
:setvar DefaultFilePrefix "BaiTapBootStrap"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Book]...';


GO
CREATE TABLE [dbo].[Book] (
    [Id]     INT           IDENTITY (1, 1) NOT NULL,
    [Title]  NVARCHAR (50) NULL,
    [Author] NVARCHAR (50) NULL,
    [Genre]  NVARCHAR (50) NULL
);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'acb58afb-167f-4567-9aa9-52e21323ca74')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('acb58afb-167f-4567-9aa9-52e21323ca74')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '500d42ac-5600-4bf2-ac77-05ee87800ce0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('500d42ac-5600-4bf2-ac77-05ee87800ce0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2d2a6abf-11fa-4eb3-a570-3d2320a2d105')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2d2a6abf-11fa-4eb3-a570-3d2320a2d105')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fded4d38-70d1-4d2a-8314-3ff56c9a49c9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fded4d38-70d1-4d2a-8314-3ff56c9a49c9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fcf52f97-1222-4925-a96a-b9bef7a227c2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fcf52f97-1222-4925-a96a-b9bef7a227c2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'eba07aad-91d1-4ea8-a508-e8f2266dcb21')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('eba07aad-91d1-4ea8-a508-e8f2266dcb21')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8a982070-837d-40f1-8b3c-d0dfc2ec07c7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8a982070-837d-40f1-8b3c-d0dfc2ec07c7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f113d15f-e91d-4056-84cc-86b791b1c7df')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f113d15f-e91d-4056-84cc-86b791b1c7df')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '72cee34b-20ab-4b52-82a1-43ce9dabc402')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('72cee34b-20ab-4b52-82a1-43ce9dabc402')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '79772c3e-e642-4a93-a12a-437f6275f275')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('79772c3e-e642-4a93-a12a-437f6275f275')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '589469ef-1b0e-4e01-85c9-a923a5388d31')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('589469ef-1b0e-4e01-85c9-a923a5388d31')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9279e0c8-03dc-4945-bdd9-734c45eb8b6a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9279e0c8-03dc-4945-bdd9-734c45eb8b6a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4b37ec58-156b-443d-b431-2792feada459')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4b37ec58-156b-443d-b431-2792feada459')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f7fd76ef-ffe6-46a7-bfc7-c7b51ad1731a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f7fd76ef-ffe6-46a7-bfc7-c7b51ad1731a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8dbddace-088d-4391-9968-5fd850ed6eb4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8dbddace-088d-4391-9968-5fd850ed6eb4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '887442ac-ce69-41b2-a377-03baf7a68584')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('887442ac-ce69-41b2-a377-03baf7a68584')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '15f0c7b7-6241-4e54-873c-19977bddac99')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('15f0c7b7-6241-4e54-873c-19977bddac99')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4b4e10fa-60ff-4971-8687-c3e63259ff87')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4b4e10fa-60ff-4971-8687-c3e63259ff87')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a0b415d9-5d0c-47ef-b7e1-5b72ad4e8549')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a0b415d9-5d0c-47ef-b7e1-5b72ad4e8549')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '10866b43-8b2d-4430-966d-f29e6cb84741')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('10866b43-8b2d-4430-966d-f29e6cb84741')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ff5c46a6-0d30-4c3d-b65e-c30d5fcc9b56')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ff5c46a6-0d30-4c3d-b65e-c30d5fcc9b56')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cf2048c4-71f5-41de-b627-0f1f9fe4c01c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cf2048c4-71f5-41de-b627-0f1f9fe4c01c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2afe0eb5-b6fb-4143-8d8b-d8b1a3d6df4e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2afe0eb5-b6fb-4143-8d8b-d8b1a3d6df4e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1afea307-f968-4fdc-a99f-3c1b57c60825')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1afea307-f968-4fdc-a99f-3c1b57c60825')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '305b708f-1acf-44d3-9317-f4db621c5390')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('305b708f-1acf-44d3-9317-f4db621c5390')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ac0b4f29-873a-44df-9775-23abd667f50c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ac0b4f29-873a-44df-9775-23abd667f50c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bda74bdb-6d7a-4d40-aba4-0f2ff1f20696')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bda74bdb-6d7a-4d40-aba4-0f2ff1f20696')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'da4ed208-3d18-4416-ac7b-f25b87edd474')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('da4ed208-3d18-4416-ac7b-f25b87edd474')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5daa5b7a-f378-4de7-ac9a-185125663ca6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5daa5b7a-f378-4de7-ac9a-185125663ca6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '69793c45-3587-44c7-895e-913084109628')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('69793c45-3587-44c7-895e-913084109628')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '645b3855-dd31-4678-b437-1983709ada8b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('645b3855-dd31-4678-b437-1983709ada8b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5e90bb7c-c90e-4c01-925f-4bdc8970d914')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5e90bb7c-c90e-4c01-925f-4bdc8970d914')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd3cf1e9b-0314-4d74-996b-0e1fab74b7d8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d3cf1e9b-0314-4d74-996b-0e1fab74b7d8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '40a58457-2c21-479e-8a93-b4cddad135fc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('40a58457-2c21-479e-8a93-b4cddad135fc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a7e02507-70d1-4737-98f1-00ad76d7c9d7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a7e02507-70d1-4737-98f1-00ad76d7c9d7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0423bd8d-8f38-4c9b-a7ff-0e77678f7bed')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0423bd8d-8f38-4c9b-a7ff-0e77678f7bed')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2bcbd8be-3b8c-45f5-a81c-80c4c96c9087')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2bcbd8be-3b8c-45f5-a81c-80c4c96c9087')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5014e825-1b17-4919-8e91-ecf0ab603d31')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5014e825-1b17-4919-8e91-ecf0ab603d31')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
