@model IEnumerable<NHibernate_repository.Models.Customer>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CompanyName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ContactName)
        </th>
        <th>Action</th>
        <th>Action</th>
        <th>Orders</th>
        <th>Add Order</th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CompanyName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ContactName)
        </td>
        <td>
            @Html.ActionLink("Edit Customer", "Update", new { id = item.CustomerID, company = item.CompanyName, contact = item.ContactName, FormMethod.Post })
        </td>
        <td>
            <script language="javascript">
                function confirmDeleteAction(name) {
                    return confirm('Are you sure delete name?'+name);
            }
            </script>
           
        @using (Html.BeginForm("Delete", "Customer", new { id = item.CustomerID }, FormMethod.Post, new { onclick = "return confirmDeleteAction('" + item.CustomerID + "'); " }))
                {
            @Html.AntiForgeryToken()
            <div class="btn btn-danger btn-xs">
                <span class="glyphicon glyphicon-minus" aria-hidden="true"></span>
                <input type="submit" id="Delete" class="btn btn-danger btn-xs" value="Delete">
            </div>
        }
        </td>
        <td>
            @try
            {
                if (item.ListOrder.Count >= 1)
                {
                    foreach (var order in item.ListOrder)
                    {
                        <ul>
                            <li> @order.OrderID</li>
                            <li> @order.OrderDate </li>
                            <li> @order.ShipToName </li>
                        </ul>
                    }
                }
            }
            catch (Exception ex)
            {

            }
            
        </td>
        <td>

            @using (Html.BeginForm("AddOrder", "Customer", new { id = item.CustomerID, company = item.CompanyName, contact = item.ContactName } ))
                {
                @Html.AntiForgeryToken()
                <div class="btn btn-primary btn-xs">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                    <input type="submit" id="AddOrder" class="btn btn-primary btn-xs" value="AddOrder">
                </div>
            }

        </td>
    </tr>
}

</table>
